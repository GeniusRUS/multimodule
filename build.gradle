// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.31'
    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

ext {
    // Network
    okhttpVersion = '3.12.1'
    retrofitVersion = '2.5.0'
    coroutineConverterVersion = '0.9.2'

    // DI
    daggerVersion = '2.22.1'

    coroutinesVersion = '1.2.1'

    depsWithVersion = [
            // DI
            "com.google.dagger:dagger"                          : daggerVersion,
            "com.google.dagger:dagger-android"                  : daggerVersion,
            "com.google.dagger:dagger-android-support"          : daggerVersion,
            "com.google.dagger:dagger-compiler"                 : daggerVersion,
            "com.google.dagger:dagger-android-processor"        : daggerVersion,

            // Network
            "com.squareup.okhttp3:okhttp"                       : okhttpVersion,
            "com.squareup.retrofit2:retrofit"                   : retrofitVersion,
            "com.squareup.retrofit2:converter-gson"             : retrofitVersion,
            "com.squareup.okhttp3:logging-interceptor"          : okhttpVersion,
            "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter" : coroutineConverterVersion,

            "org.jetbrains.kotlinx:kotlinx-coroutines-core"     : coroutinesVersion,
            "org.jetbrains.kotlinx:kotlinx-coroutines-android"  : coroutinesVersion
    ]

    deps = { String key ->
        def version = depsWithVersion[key]
        if (version == null) throw new IllegalDependencyNotation("Version for library '$key' unknown. Update root build.gradle")
        "$key:${version}"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
